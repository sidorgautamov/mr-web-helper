{"version":3,"sources":["components/CallbackFrom.js","hooks/http-hook.js","App.js","serviceWorker.js","index.js"],"names":["useStyle","makeStyles","theme","container","display","flexDirection","alignItems","margin","padding","item","backgroundColor","borderRadius","boxShadow","textButton","breakpoints","up","width","transition","border","buttonUnderline","height","position","bottom","palette","text","secondary","inputForm","fontFamily","fontWeight","fontSize","CallbackFrom","classes","request","useState","error","setError","useCallback","url","a","method","body","headers","JSON","stringify","console","log","response","fetch","json","data","ok","Error","message","clearError","useHttp","name","number","form","setForm","changeHandler","event","target","value","sendMessage","Grid","spacing","className","xs","md","xl","Typography","variant","color","align","role","id","onChange","ButtonBase","onClick","Box","createMuiTheme","primary","light","purple","main","dark","amber","grey","values","sm","lg","unit","typography","h3","body1","body2","button","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1a337004.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Grid, Typography, ButtonBase, Box, makeStyles } from '@material-ui/core';\r\nimport { useHttp } from '../hooks/http-hook';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        margin: '0rem',\r\n        padding: '1rem'\r\n    },\r\n    item: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '1rem',\r\n        backgroundColor: '#fafafa',\r\n        borderRadius: '4px',\r\n        boxShadow: '#eceff1 0px 4px 4px'\r\n    },\r\n    textButton: {\r\n        [theme.breakpoints.up('xs')]:\r\n        {\r\n            width: '10rem'\r\n        },\r\n        [theme.breakpoints.up('sm')]:\r\n        {\r\n            width: '12rem'\r\n        },\r\n        [theme.breakpoints.up('md')]:\r\n        {\r\n            width: '10rem'\r\n        },\r\n        [theme.breakpoints.up('lg')]:\r\n        {\r\n            width: '12rem'\r\n        },\r\n        [theme.breakpoints.up('xl')]:\r\n        {\r\n            width: '18rem'\r\n        },\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        margin: '2rem',\r\n        border: '1px solid rgba(0, 0, 0, 0)',\r\n        '&:hover': {\r\n            transition: 'border 0.5s ease-in 0.25s',\r\n            border: '1px solid rgba(33, 33, 33, 1)',\r\n            '& $buttonUnderline': {\r\n                transition: 'width 0.5s ease-in 0s',\r\n                width: '100%'\r\n            }\r\n        }\r\n    },\r\n    buttonUnderline: {\r\n        transition: 'width 0.5s ease-in 0s',\r\n        width: '50%',\r\n        height: '1px',\r\n        position: 'absolute',\r\n        bottom: '-1px',\r\n        backgroundColor: theme.palette.text.secondary\r\n    },\r\n    inputForm: {\r\n        fontFamily: '\"Jost\", sans-serif',\r\n        fontWeight: '300',\r\n        [theme.breakpoints.up('xs')]:\r\n        {\r\n            width: '10rem',\r\n            fontSize: '1rem',\r\n            height: '1rem'\r\n        },\r\n        [theme.breakpoints.up('sm')]:\r\n        {\r\n            width: '12rem',\r\n            fontSize: '1.5rem',\r\n            height: '1.5rem'\r\n        },\r\n        [theme.breakpoints.up('md')]:\r\n        {\r\n            width: '10rem',\r\n            fontSize: '1.8rem',\r\n            height: '1.8rem'\r\n        },\r\n        [theme.breakpoints.up('lg')]:\r\n        {\r\n            width: '12rem',\r\n            fontSize: '2.2rem',\r\n            height: '2.2rem'\r\n        },\r\n        [theme.breakpoints.up('xl')]:\r\n        {\r\n            width: '18rem',\r\n            fontSize: '2.5rem',\r\n            height: '2.5rem'\r\n        },\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        textAlign: 'center',\r\n        backgroundColor: '#fafafa',\r\n        border: '0px',\r\n        borderBottom: '2px solid #ff6f00',\r\n        outline: 'none'\r\n    }\r\n}));\r\n\r\nexport default function CallbackFrom() {\r\n    const classes = useStyle();\r\n    const { request } = useHttp();\r\n    const [form, setForm] = useState({ name: '', number: '' });\r\n    \r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value });\r\n    }\r\n\r\n    const sendMessage = async () => {\r\n        try {\r\n            await request('/api/bot/callback', 'POST', { ...form });\r\n        } catch (e) {}\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={0} className={classes.container}>\r\n            <Grid item xs={10} md={8} xl={6} className={classes.item}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" align=\"center\">\r\n                    MrWebHelper - Telegram Bot <span role=\"img\">ü§ñ</span>\r\n                </Typography>\r\n\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    –í–∞—à–µ –∏–º—è\r\n                </Typography>\r\n                <input id=\"name\" name=\"name\" className={classes.inputForm} onChange={changeHandler} />\r\n\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    –í–∞—à –Ω–æ–º–µ—Ä\r\n                </Typography>\r\n                <input id=\"number\" name=\"number\" className={classes.inputForm} onChange={changeHandler} />\r\n\r\n                <ButtonBase className={classes.textButton} onClick={sendMessage}>\r\n                    <Typography variant=\"button\" color=\"textSecondary\" align=\"center\">\r\n                        –û—Ç–ø—Ä–∞–≤–∏—Ç—å\r\n                    </Typography>\r\n                    <Box className={classes.buttonUnderline} />\r\n                </ButtonBase>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'POST', body = null, headers = {}) => {\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n                console.log(body);\r\n            }\r\n\r\n            const response =  fetch(url, { method, body, headers });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Something go wrong');\r\n            }\r\n\r\n            return data;\r\n        } catch (e) {\r\n            setError(e.message);\r\n            return e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    }\r\n\r\n    return { request, error, clearError };\r\n}","import React, {Fragment} from 'react';\nimport CallbackForm from './components/CallbackFrom';\nimport { ThemeProvider, CssBaseline, createMuiTheme } from '@material-ui/core';\nimport { purple, amber, grey } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[50],\n      main: purple[500],\n      dark: purple[900]\n    },\n    secondary: {\n      light: amber[50],\n      main: amber[500],\n      dark: amber[900]\n    },\n    text: {\n      primary: grey[50],\n      secondary: grey[900]\n    }\n  },\n\n  breakpoints: {\n    values: {\n      xs: 20, /* 320px */\n      sm: 35, /* 560px */\n      md: 60, /* 960px */\n      lg: 80, /* 1280px */\n      xl: 128 /* 2048px */\n    },\n    unit: 'rem'\n  },\n\n  typography: {\n    fontFamily: '\"Jost\", sans-serif',\n    fontSize: 12,\n    fontWeight: '600',\n    h3: {\n      transition: 'font-size 1s ease-out 0s',\n      '@media screen and (min-width:20rem)': {\n        fontSize: '1.75rem'\n      },\n      '@media screen and (min-width:35rem)': {\n        fontSize: '2rem'\n      },\n      '@media screen and (min-width:60rem)': {\n        fontSize: '2.25rem'\n      },\n      '@media screen and (min-width:80rem)': {\n        fontSize: '2.5rem'\n      },\n      '@media screen and (min-width:120rem)': {\n        fontSize: '3rem'\n      }\n    },\n    body1: {\n      transition: 'font-size 1s ease-out 0s',\n      '@media screen and (min-width:20rem)': {\n        fontSize: '1rem'\n      },\n      '@media screen and (min-width:35rem)': {\n        fontSize: '1.5rem'\n      },\n      '@media screen and (min-width:60rem)': {\n        fontSize: '1.8rem'\n      },\n      '@media screen and (min-width:80rem)': {\n        fontSize: '2.2rem'\n      },\n      '@media screen and (min-width:120rem)': {\n        fontSize: '2.5rem'\n      }\n    },\n    body2: {\n      transition: 'font-size 1s ease-out 0s',\n      '@media screen and (min-width:20rem)': {\n        fontSize: '0.75rem'\n      },\n      '@media screen and (min-width:35rem)': {\n        fontSize: '1rem'\n      },\n      '@media screen and (min-width:60rem)': {\n        fontSize: '1.25rem'\n      },\n      '@media screen and (min-width:80rem)': {\n        fontSize: '1.5rem'\n      },\n      '@media screen and (min-width:120rem)': {\n        fontSize: '1.75rem'\n      }\n    },\n    button: {\n      transition: 'font-size 1s ease-out 0s',\n      fontWeight: '300',\n      '@media screen and (min-width:20rem)': {\n        fontSize: '1rem'\n      },\n      '@media screen and (min-width:35rem)': {\n        fontSize: '1.25rem'\n      },\n      '@media screen and (min-width:60rem)': {\n        fontSize: '1rem'\n      },\n      '@media screen and (min-width:80rem)': {\n        fontSize: '1.25rem'\n      },\n      '@media screen and (min-width:120rem)': {\n        fontSize: '1.8rem'\n      }\n    }\n  }\n});\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Fragment>\n        <CssBaseline />\n        <CallbackForm />\n      </Fragment>\n    </ThemeProvider>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}